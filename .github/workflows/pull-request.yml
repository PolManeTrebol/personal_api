name: Run Tests on Pull Request

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [release, test]
  push:
    branches: [release, test]

jobs:
  run-tests-on-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Pre-merge Conflict Detection
        run: |
          git fetch origin release
          MERGE_HEAD=$(git merge-base HEAD origin/release)
          if git merge-tree $MERGE_HEAD HEAD origin/release | grep -q "<<<<<<<"; then
            echo "Merge conflict detected!"
            exit 1
          else
            echo "No merge conflicts detected."
          fi

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to AWS CodeArtifact
        run: |
          aws codeartifact login --tool pip --repository grupotrebolenergia --domain grupotrebolenergia --domain-owner 031061601856 --region eu-west-1

      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/pull_request_requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install Pull Request Requirements
        run: pip install -U -r .github/workflows/pull_request_configuration/pull_request_requirements.txt

      - name: Lint with pylint
        env:
          PYTHONPATH: ./.github/workflows/pull_request_configuration
        run: pylint --rcfile=.github/workflows/pull_request_configuration/.pylintrc src/

      - name: Security Scanning with Bandit
        run: bandit -r -c .github/workflows/pull_request_configuration/.bandit .

      - name: Type Checking with mypy
        run: mypy --config-file .github/workflows/pull_request_configuration/mypy.ini --explicit-package-bases .

      - name: Install Dependencies
        run: pip install -U -r requirements.txt

      - name: Test Coverage
        run: |
          coverage run --rcfile=.github/workflows/pull_request_configuration/.coveragerc -m pytest
          coverage report -m --fail-under=80
          coverage-badge -o coverage.svg
